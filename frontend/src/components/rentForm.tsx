import React from "react";
import styled from "@emotion/styled";
import cookies from "js-cookie";
/**
 * `<Frame16>` ('Frame 16')
 * - [Open in Figma](https://figma.com/file/asUgXa0tsHsNH105i1oLCa?node-id=75:490)
 * - [Open in Grida](https://code.grida.co/files/asUgXa0tsHsNH105i1oLCa?node=75:490)
 * 
 * 
 * ---
 * @example
 * ```tsx
 * import React from "react";
 * 
 * export default function () {
 *   return (
 *     <>
 *       ðŸ‘‡ instanciate widget like below. ðŸ‘‡
 *       <Frame16/>
 *     </>
 *   )
 * }
 * ```
 * ---
 * @params {any} props - this widget does not requires props. you can pass custom dynamic props to the widget as you want (on typescript, it will raise type check issues).
 * ---
 * @preview
 * ![](https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/24fe9991-d274-446e-9bcc-99219ad1e00a)
 * ---
 * @remarks
 * @see {@link https://grida.co/docs} for more information.
 * ---
 * Code generated by grida.co | engine 0.0.1 (Apache-2.0) | Generated code under CC0 (public domain) *This code is free to use, modify, and redistribute. (aknowledgment is not required)*
 * 
 * 
 * ![Made with Grida](https://bridged-service-static.s3.us-west-1.amazonaws.com/branding/logo/32.png)
 * <!-- Info: Please do not remove this comment unless intended. removing this section will break grida integrations. -->
 * <!-- grida.meta.widget_declaration | engine : 0.0.1 | source : figma://asUgXa0tsHsNH105i1oLCa/75:490 -->
 */
const getCookieValue = (name) => {
	const cookies = document.cookie.split(';');
	for (const cookie of cookies) {
		const [cookieName, cookieValue] = cookie.split('=');
		if(cookieName.trim() === name.trim()) {
			return cookieValue.trim();
		}
	}
	return null;
  };







export function CarForm({socket}) {

	const [car_details,setCarDetails] = React.useState({
		make: "",
		model: "",
		year: "",
		city: "",
		rental_price: "",
		pickup_location: "",
		additional_details: "",
		availability_from: "",
		availability_till: "",
		car_documents: [],
		car_pictures: [],
		plate_number:"",
		owner: getCookieValue("username"),
		ownerDisplayName: ""
	})

	function changeCarDetails(e) {
		if(e.target.name === "rental_price" && isNaN(e.target.value)) {
			alert("Please enter a valid number")
			return
		}
		setCarDetails({
			...car_details,
			[e.target.name] : e.target.value
		})
		console.log(car_details)
	}

	function submitCar() {
		if(car_details.make === "" || car_details.model === "" || car_details.year === "" || car_details.city === "" || car_details.plate_number === "" || car_details.rental_price === "" || car_details.pickup_location === "" || car_details.availability_from === "" || car_details.availability_till === "") {
			alert("Please fill all the fields")
			return
		}
		socket.emit("carform",car_details)
		console.log("car detail have been sent!")
	
	}


	React.useEffect(()=>{
		socket.on("carform",(status)=>{
			if(status == "successfull") {
				alert("Your car has been stored Successfully")
			}
			else {
				alert("Car posting Failed")
			}
		})
		socket.on("get_display_name",(display_name)=>{
			setCarDetails({
				...car_details,
				ownerDisplayName: display_name
			})
		})
		return ()=>{
			socket.off("carform")
			socket.off("get_display_name")
		}
	},[socket])

	React.useEffect(()=>{
		socket.emit("get_display_name", getCookieValue("username"))
	},[])





  return (
    <RootWrapperFrame16>
      <MacBookAir4>
        <Frame10>
          <CloudCar>
            CloudCar
          </CloudCar>
          <AddACarForRent>
            Add a car for rent
          </AddACarForRent>
          <CarDetails>
            Car details
          </CarDetails>
          <Group27/>
          <Make>
            Make
          </Make>
          <CarDocuments>
            Car documents
          </CarDocuments>
          <CarPictures>
            Car pictures
          </CarPictures>
          <Model>
            Model
          </Model>
          <Year>
            Year
          </Year>
          <City>
            City
          </City>
          <Color>
            Plate Number
          </Color>
          <RentalPricePerDay>
            Rental price (per day)
          </RentalPricePerDay>
          <PickUpLocation>
            Pick up location
          </PickUpLocation>
          <AdditionalDetailsIfAny>
            Additional details (if any)
          </AdditionalDetailsIfAny>
          <AvailabilityFrom>
            Availability from
          </AvailabilityFrom>
          <AvailabilityTill>
            Availability till
          </AvailabilityTill>
          <Group24>
			<input
				type="text"
				placeholder="Enter Car make"
				className="message-input-container"
				name="make"
				onChange={changeCarDetails}
				value={car_details.make}
				/>
          </Group24>
          <Group29>
			<input
				type="text"
				placeholder="Enter Car model"
				className="message-input-container"
				name="model"
				onChange={changeCarDetails}
				value={car_details.model}
				/>
          </Group29>
          <Group30>
			<input
				type="text"
				placeholder="Enter Car year"
				className="message-input-container"
				name="year"
				onChange={changeCarDetails}
				value={car_details.year}
				/>
          </Group30>
          <Group31>
			<input
				type="text"
				placeholder="Enter Car city"
				className="message-input-container"
				name="city"
				onChange={changeCarDetails}
				value={car_details.city}
				/>
          </Group31>
          <Group32>
			<input
				type="text"
				placeholder="Enter Plate number"
				className="message-input-container"
				name="plate_number"
				onChange={changeCarDetails}
				value={car_details.plate_number}
				/>
          </Group32>
          <Group33>
			<input
				type="text"
				placeholder="Enter Car rental price"
				className="message-input-container"
				name="rental_price"
				onChange={changeCarDetails}
				value={car_details.rental_price}
			/>
          </Group33>
          <Group34>
			<input
				type="text"
				placeholder="Enter Car pickup location"
				className="message-input-container"
				name="pickup_location"
				onChange={changeCarDetails}
				value={car_details.pickup_location}
			/>
          </Group34>
		  <Group34>
			<input
				type="text"
				placeholder="Enter Car pickup location"
				className="message-input-container"
				name="pickup_location"
				onChange={changeCarDetails}
				value={car_details.pickup_location}
			/>
          </Group34>
          <Group56>
			<input
				type="text"
				placeholder="Enter Additional details"
				className="message-input-container"
				name="additional_details"
				onChange={changeCarDetails}
				value={car_details.additional_details}
			/>
          </Group56>
          <Group35>
			<input
				type="text"
				placeholder="DD/MM/YYYY"
				className="message-input-container"
				name="availability_from"
				onChange={changeCarDetails}
				value={car_details.availability_from}
			/>
          </Group35>
          <Group45>
			<input
				type="text"
				placeholder="DD/MM/YYYY"
				className="message-input-container"
				name="availability_till"
				onChange={changeCarDetails}
				value={car_details.availability_till}
			/>
          </Group45>
          <Group26 onClick={submitCar}>
            <Group29_0001>
              <Rectangle18/>
              <Add>
                Add
              </Add>
            </Group29_0001>
          </Group26>
          <Rectangle20 xmlns="http://www.w3.org/2000/svg">
            <path fill="rgba(217, 217, 217, 0)" d="M0 0L8 0L8 2.4L2.4 2.4L2.4 8L0 8L0 0Z"/>
          </Rectangle20>
          <Rectangle21 xmlns="http://www.w3.org/2000/svg">
            <path fill="rgba(217, 217, 217, 0)" d="M0 0L8 0L8 2.4L2.4 2.4L2.4 8L0 8L0 0Z"/>
          </Rectangle21>
          <Group43>
            <Rectangle22/>
            <Group41>
              <Upload>
                Upload
              </Upload>
              <Group40>
                <Rectangle23 xmlns="http://www.w3.org/2000/svg">
                  <path fill="rgba(217, 217, 217, 0)" d="M0 0L8 0L8 2.4L2.4 2.4L2.4 8L0 8L0 0Z"/>
                </Rectangle23>
                <Line3/>
              </Group40>
            </Group41>
          </Group43>
          <Group46 src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/f8dca979-186b-45c0-8c17-a67ddfce3d50" alt="icon"/>
          <Group48 src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/b9ec5a7d-5180-4db9-8a8a-32235412070f" alt="icon"/>
          <Group50 src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/2fc2de30-efbe-4a7c-ac56-05f3106ff6ab" alt="icon"/>
          <Group52 src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/a97d100b-6cdd-448a-b3fe-163c2eacd742" alt="icon"/>
          <Group54 src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/a65f9cd3-02f0-4d16-a26d-db324589b2f9" alt="icon"/>
          <Line3_0001/>
          {/* <_1491/> */}
          {/* <_1492/> */}
          <Group47 src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/8d563b63-1beb-429c-b19c-27db0fa01473" alt="icon"/>
          <Group49 src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/df826d60-cbd8-434f-9b5b-ac842b4dae07" alt="icon"/>
          <Group51 src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/c4c7402b-64ea-43df-a5a4-5b258fb2f1a4" alt="icon"/>
          <Group53 src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/e0262b62-a315-4c4e-8b2d-da249aab813a" alt="icon"/>
          <Group55 src="https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/9d65fc4a-b26e-4959-b664-86611b85349d" alt="icon"/>
          <AntonJansson0GYroiAbkigUnsplash1/>
        </Frame10>
      </MacBookAir4>
    </RootWrapperFrame16>
  )
}

const RootWrapperFrame16 = styled.div`
	min-height: 100vh;
	position: relative;
`;

const MacBookAir4 = styled.div`
	width: 1440px;
	height: 832px;
	overflow: hidden;
	background: rgb(255, 255, 255);
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
	position: absolute;
	left: 0px;
	top: 0px;
`;

const Frame10 = styled.div`
	width: 1440px;
	height: 832px;
	overflow: hidden;
	background: linear-gradient(-180deg, rgb(26, 44, 46), black);
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
	position: absolute;
	left: calc((calc((50% + 0px)) - 720px));
	top: 0px;
`;

const CloudCar = styled.span`
	color: rgb(57, 168, 161);
	text-overflow: ellipsis;
	font-size: 24px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 172px;
	min-height: 32px;
	position: absolute;
	left: calc((calc((50% + -615px)) - 86px));
	top: calc((calc((50% + -387px)) - 16px));
	height: 32px;
`;

const AddACarForRent = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 20px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 176px;
	min-height: 24px;
	position: absolute;
	left: 130px;
	top: 76px;
	height: 24px;
`;

const CarDetails = styled.span`
	color: rgb(57, 168, 161);
	text-overflow: ellipsis;
	font-size: 16px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 111px;
	min-height: 24px;
	position: absolute;
	left: 163px;
	top: 107px;
	height: 24px;
`;

const Group27 = styled.div`
	position: absolute;
	left: 1025px;
	top: 515px;
`;

const Make = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 65px;
	min-height: 18px;
	position: absolute;
	left: 38px;
	top: 138px;
	height: 18px;
`;

const CarDocuments = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 186px;
	min-height: 18px;
	position: absolute;
	left: 1014px;
	top: 135px;
	height: 18px;
`;

const CarPictures = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 193px;
	min-height: 18px;
	position: absolute;
	left: 1013px;
	top: 204px;
	height: 18px;
`;

const Model = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 44px;
	min-height: 18px;
	position: absolute;
	left: 38px;
	top: 206px;
	height: 18px;
`;

const Year = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 65px;
	min-height: 18px;
	position: absolute;
	left: 38px;
	top: 274px;
	height: 18px;
`;

const City = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 60px;
	min-height: 18px;
	position: absolute;
	left: 38px;
	top: 342px;
	height: 18px;
`;

const Color = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 97px;
	min-height: 18px;
	position: absolute;
	left: 38px;
	top: 416px;
	height: 18px;
`;

const RentalPricePerDay = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 146px;
	min-height: 18px;
	position: absolute;
	left: 38px;
	top: 490px;
	height: 18px;
`;

const PickUpLocation = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 108px;
	min-height: 18px;
	position: absolute;
	left: 38px;
	top: 564px;
	height: 18px;
`;

const AdditionalDetailsIfAny = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 176px;
	min-height: 18px;
	position: absolute;
	left: 1012px;
	top: 292px;
	height: 18px;
`;

const AvailabilityFrom = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 130px;
	min-height: 18px;
	position: absolute;
	left: 38px;
	top: 638px;
	height: 18px;
`;

const AvailabilityTill = styled.span`
	color: white;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 130px;
	min-height: 18px;
	position: absolute;
	left: 210px;
	top: 638px;
	height: 18px;
`;

const Group24 = styled.div`
	width: 338px;
	height: 33px;
	position: absolute;
	left: 24px;
	top: 159px;
`;

const Rectangle16 = styled.div`
	width: 338px;
	height: 33px;
	background: rgb(96, 89, 89);
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
	border-radius: 20px;
	position: absolute;
	left: 0px;
	top: 0px;
`;

const EnterEmailHere = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 188px;
	min-height: 16px;
	position: absolute;
	left: 12px;
	top: 8px;
	height: 16px;
`;

const EnterMakeOfYourCarHere = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 188px;
	min-height: 16px;
	position: absolute;
	left: 12px;
	top: 8px;
	height: 16px;
`;

const Group29 = styled.div`
	width: 338px;
	height: 33px;
	position: absolute;
	left: 24px;
	top: 227px;
`;

const EnterModelOfYourCarHere = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 188px;
	min-height: 16px;
	position: absolute;
	left: 12px;
	top: 8px;
	height: 16px;
`;

const Group30 = styled.div`
	width: 338px;
	height: 33px;
	position: absolute;
	left: 24px;
	top: 295px;
`;

const _2009 = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 182px;
	min-height: 16px;
	position: absolute;
	left: 12px;
	top: 8px;
	height: 16px;
`;

const Group31 = styled.div`
	width: 338px;
	height: 33px;
	position: absolute;
	left: 24px;
	top: 363px;
`;

const Lahore = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 182px;
	min-height: 16px;
	position: absolute;
	left: 12px;
	top: 8px;
	height: 16px;
`;

const Group32 = styled.div`
	width: 338px;
	height: 33px;
	position: absolute;
	left: 24px;
	top: 437px;
`;

const EnterColorHere = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 110px;
	min-height: 17px;
	position: absolute;
	left: 12px;
	top: 8px;
	height: 17px;
`;

const Group33 = styled.div`
	width: 338px;
	height: 33px;
	position: absolute;
	left: 24px;
	top: 511px;
`;

const Pkr = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 31px;
	min-height: 17px;
	position: absolute;
	left: 12px;
	top: 8px;
	height: 17px;
`;

const Group34 = styled.div`
	width: 338px;
	height: 33px;
	position: absolute;
	left: 24px;
	top: 585px;
`;

const EnterFullAddressHere = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 188px;
	min-height: 16px;
	position: absolute;
	left: 12px;
	top: 8px;
	height: 16px;
`;

const Group56 = styled.div`
	width: 338px;
	height: 33px;
	position: absolute;
	left: 998px;
	top: 322px;
`;

const WriteHere = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 188px;
	min-height: 16px;
	position: absolute;
	left: 12px;
	top: 8px;
	height: 16px;
`;

const Group35 = styled.div`
	width: 100px;
	height: 33px;
	position: absolute;
	left: 24px;
	top: 659px;
`;

const Rectangle16_0010 = styled.div`
	width: 166px;
	height: 33px;
	background: rgb(96, 89, 89);
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
	border-radius: 20px;
	position: absolute;
	left: 0px;
	top: 0px;
`;

const DdMmYyyy = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 110px;
	min-height: 17px;
	position: absolute;
	left: 12px;
	top: 8px;
	height: 17px;
`;

const Group45 = styled.div`
	width: 100px;
	height: 33px;
	position: absolute;
	left: 196px;
	top: 659px;
`;

const Group26 = styled.div`
	width: 101px;
	height: 31px;
	position: absolute;
	left: 1140px;
	top: 416px;
	cursor: pointer;
`;

const Group29_0001 = styled.div`
	width: 101px;
	height: 31px;
	position: absolute;
	left: 0px;
	top: 0px;
`;

const Rectangle18 = styled.div`
	width: 101px;
	height: 31px;
	background: rgb(57, 168, 161);
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
	border-radius: 65px;
	position: absolute;
	left: 0px;
	top: 0px;
`;

const Add = styled.span`
	color: black;
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 800;
	text-align: left;
	width: 34px;
	min-height: 18px;
	position: absolute;
	left: 33px;
	top: 7px;
	height: 18px;
`;

const Rectangle20 = styled.svg`
	width: 8px;
	height: 8px;
	position: absolute;
	left: 339px;
	top: 386px;
	transform: rotate(-135deg);
	transform-origin: top left;
`;

const Rectangle21 = styled.svg`
	width: 8px;
	height: 8px;
	position: absolute;
	left: 340px;
	top: 316px;
	transform: rotate(-135deg);
	transform-origin: top left;
`;

const Group43 = styled.div`
	width: 92px;
	height: 27px;
	position: absolute;
	left: 1013px;
	top: 161px;
`;

const Rectangle22 = styled.div`
	width: 92px;
	height: 27px;
	background: linear-gradient(-90deg, rgba(217, 217, 217, 0), rgba(217, 217, 217, 0));
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
	border: solid 1px rgb(167, 167, 167);
	border-radius: 10px;
	position: absolute;
	left: 0px;
	top: 0px;
`;

const Group41 = styled.div`
	width: 69px;
	height: 17px;
	position: absolute;
	left: 12px;
	top: 5px;
`;

const Upload = styled.span`
	color: rgb(165, 155, 155);
	text-overflow: ellipsis;
	font-size: 14px;
	font-family: Urbanist, sans-serif;
	font-weight: 700;
	text-align: left;
	width: 48px;
	min-height: 17px;
	position: absolute;
	left: 0px;
	top: 0px;
	height: 17px;
`;

const Group40 = styled.div`
	width: 11px;
	height: 13px;
	position: absolute;
	left: 58px;
	top: 1px;
`;

const Rectangle23 = styled.svg`
	width: 8px;
	height: 8px;
	position: absolute;
	left: 6px;
	top: 0px;
	transform: rotate(-315deg);
	transform-origin: top left;
`;

const Line3 = styled.div`
	width: 10px;
	height: 0px;
	border-top: solid 3px rgb(165, 155, 155);
	position: absolute;
	left: 7px;
	top: 13px;
	transform: rotate(-90deg);
	transform-origin: top left;
`;

const Group46 = styled.img`
	width: 40px;
	height: 40px;
	object-fit: cover;
	position: absolute;
	left: 1014px;
	top: 233px;
`;

const Group48 = styled.img`
	width: 40px;
	height: 40px;
	object-fit: cover;
	position: absolute;
	left: 1065px;
	top: 232px;
`;

const Group50 = styled.img`
	width: 40px;
	height: 40px;
	object-fit: cover;
	position: absolute;
	left: 1116px;
	top: 231px;
`;

const Group52 = styled.img`
	width: 40px;
	height: 40px;
	object-fit: cover;
	position: absolute;
	left: 1167px;
	top: 230px;
`;

const Group54 = styled.img`
	width: 40px;
	height: 40px;
	object-fit: cover;
	position: absolute;
	left: 1218px;
	top: 229px;
`;

const Line3_0001 = styled.div`
	width: 18px;
	height: 0px;
	border-top: solid 1px white;
	position: absolute;
	left: 70px;
	top: 518px;
	transform: rotate(-270deg);
	transform-origin: top left;
`;

const _1491 = styled.div`
	width: 19px;
	height: 19px;
	background: url(https://s3-alpha-sig.figma.com/img/1243/2431/586d358d1f33940966c3a0af421bd47a?Expires=1710115200&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=lylsm9NKsIyCGnRg1GVGVEytUNcOta7rx2qmP3Z-VVcsGAA5ETeCi7PYSW9XAbVi2xpMDWol0H~49ycOOtpNros3Sxk2AUXkoFZ5xSpLSJb~lGoEAxtaogsWNQCk9HH1OcHwlOVroYYEbCCrwSZIYEAaz6RsHFfJ-QUXrPMdqCDSlHjMnZvBA7RKcZd9NmvcSAMcxj~0b1tGHMg848IFptXqhk67xaaLQZ0baeX0uWvcEIOM1WPopIQkr0zQWGubNBn0iyAS0odkTDXEzRTiTB8yW5L0A9zcER6vfJPRrjIcIenoeDGcN8ackx2l8AU8rI8Mc9oPeYU3L0JLdwbpoQ__);
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center;
	position: absolute;
	left: 332px;
	top: 666px;
`;

const _1492 = styled.div`
	width: 19px;
	height: 19px;
	background: url(https://s3-alpha-sig.figma.com/img/1243/2431/586d358d1f33940966c3a0af421bd47a?Expires=1710115200&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=lylsm9NKsIyCGnRg1GVGVEytUNcOta7rx2qmP3Z-VVcsGAA5ETeCi7PYSW9XAbVi2xpMDWol0H~49ycOOtpNros3Sxk2AUXkoFZ5xSpLSJb~lGoEAxtaogsWNQCk9HH1OcHwlOVroYYEbCCrwSZIYEAaz6RsHFfJ-QUXrPMdqCDSlHjMnZvBA7RKcZd9NmvcSAMcxj~0b1tGHMg848IFptXqhk67xaaLQZ0baeX0uWvcEIOM1WPopIQkr0zQWGubNBn0iyAS0odkTDXEzRTiTB8yW5L0A9zcER6vfJPRrjIcIenoeDGcN8ackx2l8AU8rI8Mc9oPeYU3L0JLdwbpoQ__);
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center;
	position: absolute;
	left: 162px;
	top: 665px;
`;

const Group47 = styled.img`
	width: 21px;
	height: 21px;
	object-fit: cover;
	position: absolute;
	left: 1024px;
	top: 242px;
`;

const Group49 = styled.img`
	width: 21px;
	height: 21px;
	object-fit: cover;
	position: absolute;
	left: 1075px;
	top: 241px;
`;

const Group51 = styled.img`
	width: 21px;
	height: 21px;
	object-fit: cover;
	position: absolute;
	left: 1126px;
	top: 240px;
`;

const Group53 = styled.img`
	width: 21px;
	height: 21px;
	object-fit: cover;
	position: absolute;
	left: 1177px;
	top: 239px;
`;

const Group55 = styled.img`
	width: 21px;
	height: 21px;
	object-fit: cover;
	position: absolute;
	left: 1228px;
	top: 238px;
`;

const AntonJansson0GYroiAbkigUnsplash1 = styled.div`
	width: 518px;
	height: 975px;
	background: url(https://s3-alpha-sig.figma.com/img/69f0/3ca0/2916374cae66b9e62572184fc0c59d30?Expires=1710115200&Key-Pair-Id=APKAQ4GOSFWCVNEHN3O4&Signature=hQfum6fakEs3Sko9tU5yZ72T7FZYwiK7ELt1riMFfY~QhVutQihiMv1DHeo1F69AzyYXQvPN16dEEX0F~jilmJY9NPE6YdmuT28tako025QZe77YTyHYF6~XmAXmqKDvYUvTgxTO0uzc4KfnTe-oP07RjZ0OcpwydZepZvbOLbeeCQOMb-g9ef34Cv4ayXA6~ttyMs~dbQz7x-eLY0WqH6hsrzpa9IDHlfm~3DDpGdd822CshU6mi4pouIaGpXVdIzRAhejFIFkFOK7kcqJHbkUWTHEctKOcdbAWUyv~nGHeeTbrk4B-pClZuSH5mn2Bx1G7KynejrXD-Huds26qmA__);
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center;
	position: absolute;
	left: 426px;
	top: 0px;
	opacity: 0.5;
`;

